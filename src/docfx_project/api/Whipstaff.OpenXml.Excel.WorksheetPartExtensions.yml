### YamlMime:ManagedReference
items:
- uid: Whipstaff.OpenXml.Excel.WorksheetPartExtensions
  commentId: T:Whipstaff.OpenXml.Excel.WorksheetPartExtensions
  id: WorksheetPartExtensions
  parent: Whipstaff.OpenXml.Excel
  children:
  - Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.Boolean)
  - Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.DateTimeOffset)
  - Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.Int32)
  - Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.String)
  langs:
  - csharp
  - vb
  name: WorksheetPartExtensions
  nameWithType: WorksheetPartExtensions
  fullName: Whipstaff.OpenXml.Excel.WorksheetPartExtensions
  type: Class
  source:
    path: Whipstaff.OpenXml
    isExternal: true
  assemblies:
  - Whipstaff.OpenXml
  namespace: Whipstaff.OpenXml.Excel
  summary: "\nExtension methods for working with a open xml worksheet.\n"
  syntax:
    content: 'public static class WorksheetPartExtensions : Object'
    content.vb: >-
      Public Module WorksheetPartExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.String)
  commentId: M:Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.String)
  id: InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.String)
  isExtensionMethod: true
  parent: Whipstaff.OpenXml.Excel.WorksheetPartExtensions
  langs:
  - csharp
  - vb
  name: InsertCellInWorksheet(WorksheetPart, String, UInt32, String)
  nameWithType: WorksheetPartExtensions.InsertCellInWorksheet(WorksheetPart, String, UInt32, String)
  fullName: Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart, System.String, System.UInt32, System.String)
  type: Method
  source:
    path: Whipstaff.OpenXml
    isExternal: true
  assemblies:
  - Whipstaff.OpenXml
  namespace: Whipstaff.OpenXml.Excel
  summary: "\nInserts a cell into a worksheet with a specified value.\n"
  syntax:
    content: public static Cell InsertCellInWorksheet(this WorksheetPart worksheetPart, string columnName, uint rowIndex, string value)
    parameters:
    - id: worksheetPart
      type: DocumentFormat.OpenXml.Packaging.WorksheetPart
      description: The worksheet part.
    - id: columnName
      type: System.String
      description: Name of the column.
    - id: rowIndex
      type: System.UInt32
      description: The row index. 1 based.
    - id: value
      type: System.String
      description: The value to enter.
    return:
      type: DocumentFormat.OpenXml.Spreadsheet.Cell
      description: The created or updated cell.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InsertCellInWorksheet(worksheetPart As WorksheetPart, columnName As String, rowIndex As UInteger, value As String) As Cell
  overload: Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.Boolean)
  commentId: M:Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.Boolean)
  id: InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.Boolean)
  isExtensionMethod: true
  parent: Whipstaff.OpenXml.Excel.WorksheetPartExtensions
  langs:
  - csharp
  - vb
  name: InsertCellInWorksheet(WorksheetPart, String, UInt32, Boolean)
  nameWithType: WorksheetPartExtensions.InsertCellInWorksheet(WorksheetPart, String, UInt32, Boolean)
  fullName: Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart, System.String, System.UInt32, System.Boolean)
  type: Method
  source:
    path: Whipstaff.OpenXml
    isExternal: true
  assemblies:
  - Whipstaff.OpenXml
  namespace: Whipstaff.OpenXml.Excel
  summary: "\nInserts a cell into a worksheet with a specified value.\n"
  syntax:
    content: public static Cell InsertCellInWorksheet(this WorksheetPart worksheetPart, string columnName, uint rowIndex, bool value)
    parameters:
    - id: worksheetPart
      type: DocumentFormat.OpenXml.Packaging.WorksheetPart
      description: The worksheet part.
    - id: columnName
      type: System.String
      description: Name of the column.
    - id: rowIndex
      type: System.UInt32
      description: The row index. 1 based.
    - id: value
      type: System.Boolean
      description: The value to enter.
    return:
      type: DocumentFormat.OpenXml.Spreadsheet.Cell
      description: The created or updated cell.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InsertCellInWorksheet(worksheetPart As WorksheetPart, columnName As String, rowIndex As UInteger, value As Boolean) As Cell
  overload: Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.Int32)
  commentId: M:Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.Int32)
  id: InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.Int32)
  isExtensionMethod: true
  parent: Whipstaff.OpenXml.Excel.WorksheetPartExtensions
  langs:
  - csharp
  - vb
  name: InsertCellInWorksheet(WorksheetPart, String, UInt32, Int32)
  nameWithType: WorksheetPartExtensions.InsertCellInWorksheet(WorksheetPart, String, UInt32, Int32)
  fullName: Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart, System.String, System.UInt32, System.Int32)
  type: Method
  source:
    path: Whipstaff.OpenXml
    isExternal: true
  assemblies:
  - Whipstaff.OpenXml
  namespace: Whipstaff.OpenXml.Excel
  summary: "\nInserts a cell into a worksheet with a specified value.\n"
  syntax:
    content: public static Cell InsertCellInWorksheet(this WorksheetPart worksheetPart, string columnName, uint rowIndex, int value)
    parameters:
    - id: worksheetPart
      type: DocumentFormat.OpenXml.Packaging.WorksheetPart
      description: The worksheet part.
    - id: columnName
      type: System.String
      description: Name of the column.
    - id: rowIndex
      type: System.UInt32
      description: The row index. 1 based.
    - id: value
      type: System.Int32
      description: The value to enter.
    return:
      type: DocumentFormat.OpenXml.Spreadsheet.Cell
      description: The created or updated cell.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InsertCellInWorksheet(worksheetPart As WorksheetPart, columnName As String, rowIndex As UInteger, value As Integer) As Cell
  overload: Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.DateTimeOffset)
  commentId: M:Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.DateTimeOffset)
  id: InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart,System.String,System.UInt32,System.DateTimeOffset)
  isExtensionMethod: true
  parent: Whipstaff.OpenXml.Excel.WorksheetPartExtensions
  langs:
  - csharp
  - vb
  name: InsertCellInWorksheet(WorksheetPart, String, UInt32, DateTimeOffset)
  nameWithType: WorksheetPartExtensions.InsertCellInWorksheet(WorksheetPart, String, UInt32, DateTimeOffset)
  fullName: Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet(DocumentFormat.OpenXml.Packaging.WorksheetPart, System.String, System.UInt32, System.DateTimeOffset)
  type: Method
  source:
    path: Whipstaff.OpenXml
    isExternal: true
  assemblies:
  - Whipstaff.OpenXml
  namespace: Whipstaff.OpenXml.Excel
  summary: "\nInserts a cell into a worksheet with a specified value.\n"
  syntax:
    content: public static Cell InsertCellInWorksheet(this WorksheetPart worksheetPart, string columnName, uint rowIndex, DateTimeOffset value)
    parameters:
    - id: worksheetPart
      type: DocumentFormat.OpenXml.Packaging.WorksheetPart
      description: The worksheet part.
    - id: columnName
      type: System.String
      description: Name of the column.
    - id: rowIndex
      type: System.UInt32
      description: The row index. 1 based.
    - id: value
      type: System.DateTimeOffset
      description: The value to enter.
    return:
      type: DocumentFormat.OpenXml.Spreadsheet.Cell
      description: The created or updated cell.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InsertCellInWorksheet(worksheetPart As WorksheetPart, columnName As String, rowIndex As UInteger, value As DateTimeOffset) As Cell
  overload: Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Whipstaff.OpenXml.Excel
  commentId: N:Whipstaff.OpenXml.Excel
  isExternal: true
  name: Whipstaff.OpenXml.Excel
  nameWithType: Whipstaff.OpenXml.Excel
  fullName: Whipstaff.OpenXml.Excel
- uid: Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet*
  commentId: Overload:Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet
  isExternal: true
  name: InsertCellInWorksheet
  nameWithType: WorksheetPartExtensions.InsertCellInWorksheet
  fullName: Whipstaff.OpenXml.Excel.WorksheetPartExtensions.InsertCellInWorksheet
- uid: DocumentFormat.OpenXml.Packaging.WorksheetPart
  isExternal: true
  name: WorksheetPart
  nameWithType: WorksheetPart
  fullName: DocumentFormat.OpenXml.Packaging.WorksheetPart
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: DocumentFormat.OpenXml.Spreadsheet.Cell
  isExternal: true
  name: Cell
  nameWithType: Cell
  fullName: DocumentFormat.OpenXml.Spreadsheet.Cell
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DateTimeOffset
  commentId: '!:System.DateTimeOffset'
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
