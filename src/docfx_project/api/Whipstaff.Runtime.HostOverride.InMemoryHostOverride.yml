### YamlMime:ManagedReference
items:
- uid: Whipstaff.Runtime.HostOverride.InMemoryHostOverride
  commentId: T:Whipstaff.Runtime.HostOverride.InMemoryHostOverride
  id: InMemoryHostOverride
  parent: Whipstaff.Runtime.HostOverride
  children:
  - Whipstaff.Runtime.HostOverride.InMemoryHostOverride.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  - Whipstaff.Runtime.HostOverride.InMemoryHostOverride.Resolve(System.String)
  langs:
  - csharp
  - vb
  name: InMemoryHostOverride
  nameWithType: InMemoryHostOverride
  fullName: Whipstaff.Runtime.HostOverride.InMemoryHostOverride
  type: Class
  source:
    path: Whipstaff.Runtime
    isExternal: true
  assemblies:
  - Whipstaff.Runtime
  namespace: Whipstaff.Runtime.HostOverride
  summary: "\nAn in memory implementation of a host override.\n"
  syntax:
    content: 'public sealed class InMemoryHostOverride : Object, IHostOverride'
    content.vb: >-
      Public NotInheritable Class InMemoryHostOverride
          Inherits Object
          Implements IHostOverride
  inheritance:
  - System.Object
  implements:
  - Whipstaff.Runtime.HostOverride.IHostOverride
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Whipstaff.Runtime.HostOverride.InMemoryHostOverride.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Whipstaff.Runtime.HostOverride.InMemoryHostOverride.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: Whipstaff.Runtime.HostOverride.InMemoryHostOverride
  langs:
  - csharp
  - vb
  name: InMemoryHostOverride(IDictionary<String, String>)
  nameWithType: InMemoryHostOverride.InMemoryHostOverride(IDictionary<String, String>)
  fullName: Whipstaff.Runtime.HostOverride.InMemoryHostOverride.InMemoryHostOverride(System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Constructor
  source:
    path: Whipstaff.Runtime
    isExternal: true
  assemblies:
  - Whipstaff.Runtime
  namespace: Whipstaff.Runtime.HostOverride
  summary: "\nInitializes a new instance of the <xref href=\"Whipstaff.Runtime.HostOverride.InMemoryHostOverride\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public InMemoryHostOverride(IDictionary<string, string> mappings)
    parameters:
    - id: mappings
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Dictionary of mappings.
    content.vb: Public Sub New(mappings As IDictionary(Of String, String))
  overload: Whipstaff.Runtime.HostOverride.InMemoryHostOverride.#ctor*
  nameWithType.vb: InMemoryHostOverride.InMemoryHostOverride(IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Whipstaff.Runtime.HostOverride.InMemoryHostOverride.InMemoryHostOverride(System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: InMemoryHostOverride(IDictionary(Of String, String))
- uid: Whipstaff.Runtime.HostOverride.InMemoryHostOverride.Resolve(System.String)
  commentId: M:Whipstaff.Runtime.HostOverride.InMemoryHostOverride.Resolve(System.String)
  id: Resolve(System.String)
  parent: Whipstaff.Runtime.HostOverride.InMemoryHostOverride
  langs:
  - csharp
  - vb
  name: Resolve(String)
  nameWithType: InMemoryHostOverride.Resolve(String)
  fullName: Whipstaff.Runtime.HostOverride.InMemoryHostOverride.Resolve(System.String)
  type: Method
  source:
    path: Whipstaff.Runtime
    isExternal: true
  assemblies:
  - Whipstaff.Runtime
  namespace: Whipstaff.Runtime.HostOverride
  summary: "\nReturns an overridable hostname.\n"
  syntax:
    content: public string Resolve(string host)
    parameters:
    - id: host
      type: System.String
      description: The host to check.
    return:
      type: System.String
      description: A target host, or null if no override.
    content.vb: Public Function Resolve(host As String) As String
  overload: Whipstaff.Runtime.HostOverride.InMemoryHostOverride.Resolve*
  implements:
  - Whipstaff.Runtime.HostOverride.IHostOverride.Resolve(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Whipstaff.Runtime.HostOverride
  commentId: N:Whipstaff.Runtime.HostOverride
  isExternal: true
  name: Whipstaff.Runtime.HostOverride
  nameWithType: Whipstaff.Runtime.HostOverride
  fullName: Whipstaff.Runtime.HostOverride
- uid: Whipstaff.Runtime.HostOverride.IHostOverride
  commentId: T:Whipstaff.Runtime.HostOverride.IHostOverride
  parent: Whipstaff.Runtime.HostOverride
  isExternal: true
  name: IHostOverride
  nameWithType: IHostOverride
  fullName: Whipstaff.Runtime.HostOverride.IHostOverride
- uid: Whipstaff.Runtime.HostOverride.InMemoryHostOverride.#ctor*
  commentId: Overload:Whipstaff.Runtime.HostOverride.InMemoryHostOverride.#ctor
  isExternal: true
  name: InMemoryHostOverride
  nameWithType: InMemoryHostOverride.InMemoryHostOverride
  fullName: Whipstaff.Runtime.HostOverride.InMemoryHostOverride.InMemoryHostOverride
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: '!:System.Collections.Generic.IDictionary{System.String,System.String}'
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: '!:System.Collections.Generic.IDictionary`2'
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: System.Collections.Generic.IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: System.Collections.Generic.IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.Runtime.HostOverride.InMemoryHostOverride.Resolve*
  commentId: Overload:Whipstaff.Runtime.HostOverride.InMemoryHostOverride.Resolve
  isExternal: true
  name: Resolve
  nameWithType: InMemoryHostOverride.Resolve
  fullName: Whipstaff.Runtime.HostOverride.InMemoryHostOverride.Resolve
- uid: Whipstaff.Runtime.HostOverride.IHostOverride.Resolve(System.String)
  commentId: M:Whipstaff.Runtime.HostOverride.IHostOverride.Resolve(System.String)
  parent: Whipstaff.Runtime.HostOverride.IHostOverride
  isExternal: true
  name: Resolve(String)
  nameWithType: IHostOverride.Resolve(String)
  fullName: Whipstaff.Runtime.HostOverride.IHostOverride.Resolve(System.String)
  spec.csharp:
  - uid: Whipstaff.Runtime.HostOverride.IHostOverride.Resolve(System.String)
    name: Resolve
    nameWithType: IHostOverride.Resolve
    fullName: Whipstaff.Runtime.HostOverride.IHostOverride.Resolve
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Whipstaff.Runtime.HostOverride.IHostOverride.Resolve(System.String)
    name: Resolve
    nameWithType: IHostOverride.Resolve
    fullName: Whipstaff.Runtime.HostOverride.IHostOverride.Resolve
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
