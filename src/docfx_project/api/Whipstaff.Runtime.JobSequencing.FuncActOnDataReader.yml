### YamlMime:ManagedReference
items:
- uid: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader
  commentId: T:Whipstaff.Runtime.JobSequencing.FuncActOnDataReader
  id: FuncActOnDataReader
  parent: Whipstaff.Runtime.JobSequencing
  children:
  - Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.#ctor(System.Func{System.Data.IDataReader,System.Threading.Tasks.Task},System.Func{System.Threading.Tasks.Task})
  - Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnCollectionAsync(System.Data.IDataReader,System.Func{System.Data.IDataReader,System.Threading.Tasks.Task},System.Func{System.Threading.Tasks.Task})
  - Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnItemAsync(System.Data.IDataReader)
  - Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.OnNoItemsHandledAsync
  langs:
  - csharp
  - vb
  name: FuncActOnDataReader
  nameWithType: FuncActOnDataReader
  fullName: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader
  type: Class
  source:
    path: Whipstaff.Runtime
    isExternal: true
  assemblies:
  - Whipstaff.Runtime
  namespace: Whipstaff.Runtime.JobSequencing
  summary: "\nRepresents a data reader actor that takes a func.\n"
  syntax:
    content: 'public sealed class FuncActOnDataReader : ActOnDataReader'
    content.vb: >-
      Public NotInheritable Class FuncActOnDataReader
          Inherits ActOnDataReader
  inheritance:
  - System.Object
  - Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}
  - Whipstaff.Runtime.JobSequencing.ActOnDataReader
  inheritedMembers:
  - Whipstaff.Runtime.JobSequencing.ActOnDataReader.ActOnCollectionAsync(System.Data.IDataReader)
  - Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}.ActOnCollectionAsync(System.Data.IDataReader)
  - Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}.ActOnItemAsync(System.Data.IDataReader)
  - Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}.OnNoItemsHandledAsync
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.#ctor(System.Func{System.Data.IDataReader,System.Threading.Tasks.Task},System.Func{System.Threading.Tasks.Task})
  commentId: M:Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.#ctor(System.Func{System.Data.IDataReader,System.Threading.Tasks.Task},System.Func{System.Threading.Tasks.Task})
  id: '#ctor(System.Func{System.Data.IDataReader,System.Threading.Tasks.Task},System.Func{System.Threading.Tasks.Task})'
  parent: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader
  langs:
  - csharp
  - vb
  name: FuncActOnDataReader(Func<IDataReader, Task>, Func<Task>)
  nameWithType: FuncActOnDataReader.FuncActOnDataReader(Func<IDataReader, Task>, Func<Task>)
  fullName: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.FuncActOnDataReader(System.Func<System.Data.IDataReader, System.Threading.Tasks.Task>, System.Func<System.Threading.Tasks.Task>)
  type: Constructor
  source:
    path: Whipstaff.Runtime
    isExternal: true
  assemblies:
  - Whipstaff.Runtime
  namespace: Whipstaff.Runtime.JobSequencing
  summary: "\nInitializes a new instance of the <xref href=\"Whipstaff.Runtime.JobSequencing.FuncActOnDataReader\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public FuncActOnDataReader(Func<IDataReader, Task> actOnItemAsyncFunc, Func<Task> onNoItemsHandledAsync)
    parameters:
    - id: actOnItemAsyncFunc
      type: System.Func{System.Data.IDataReader,System.Threading.Tasks.Task}
      description: The action to carry out on each item.
    - id: onNoItemsHandledAsync
      type: System.Func{System.Threading.Tasks.Task}
      description: The action to carry out if there are no items in the data reader.
    content.vb: Public Sub New(actOnItemAsyncFunc As Func(Of IDataReader, Task), onNoItemsHandledAsync As Func(Of Task))
  overload: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.#ctor*
  nameWithType.vb: FuncActOnDataReader.FuncActOnDataReader(Func(Of IDataReader, Task), Func(Of Task))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.FuncActOnDataReader(System.Func(Of System.Data.IDataReader, System.Threading.Tasks.Task), System.Func(Of System.Threading.Tasks.Task))
  name.vb: FuncActOnDataReader(Func(Of IDataReader, Task), Func(Of Task))
- uid: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnCollectionAsync(System.Data.IDataReader,System.Func{System.Data.IDataReader,System.Threading.Tasks.Task},System.Func{System.Threading.Tasks.Task})
  commentId: M:Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnCollectionAsync(System.Data.IDataReader,System.Func{System.Data.IDataReader,System.Threading.Tasks.Task},System.Func{System.Threading.Tasks.Task})
  id: ActOnCollectionAsync(System.Data.IDataReader,System.Func{System.Data.IDataReader,System.Threading.Tasks.Task},System.Func{System.Threading.Tasks.Task})
  parent: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader
  langs:
  - csharp
  - vb
  name: ActOnCollectionAsync(IDataReader, Func<IDataReader, Task>, Func<Task>)
  nameWithType: FuncActOnDataReader.ActOnCollectionAsync(IDataReader, Func<IDataReader, Task>, Func<Task>)
  fullName: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnCollectionAsync(System.Data.IDataReader, System.Func<System.Data.IDataReader, System.Threading.Tasks.Task>, System.Func<System.Threading.Tasks.Task>)
  type: Method
  source:
    path: Whipstaff.Runtime
    isExternal: true
  assemblies:
  - Whipstaff.Runtime
  namespace: Whipstaff.Runtime.JobSequencing
  summary: "\nHelper to create a Func to act on a data reader.\n"
  syntax:
    content: public static Task ActOnCollectionAsync(IDataReader dataReader, Func<IDataReader, Task> actOnItemAsyncFunc, Func<Task> onNoItemsHandledAsync)
    parameters:
    - id: dataReader
      type: System.Data.IDataReader
      description: The datareader to act upon.
    - id: actOnItemAsyncFunc
      type: System.Func{System.Data.IDataReader,System.Threading.Tasks.Task}
      description: The action to carry out.
    - id: onNoItemsHandledAsync
      type: System.Func{System.Threading.Tasks.Task}
      description: The action to carry out if there are no items in the data reader.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the result of the asynchronous operation.
    content.vb: Public Shared Function ActOnCollectionAsync(dataReader As IDataReader, actOnItemAsyncFunc As Func(Of IDataReader, Task), onNoItemsHandledAsync As Func(Of Task)) As Task
  overload: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnCollectionAsync*
  nameWithType.vb: FuncActOnDataReader.ActOnCollectionAsync(IDataReader, Func(Of IDataReader, Task), Func(Of Task))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnCollectionAsync(System.Data.IDataReader, System.Func(Of System.Data.IDataReader, System.Threading.Tasks.Task), System.Func(Of System.Threading.Tasks.Task))
  name.vb: ActOnCollectionAsync(IDataReader, Func(Of IDataReader, Task), Func(Of Task))
- uid: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnItemAsync(System.Data.IDataReader)
  commentId: M:Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnItemAsync(System.Data.IDataReader)
  id: ActOnItemAsync(System.Data.IDataReader)
  parent: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader
  langs:
  - csharp
  - vb
  name: ActOnItemAsync(IDataReader)
  nameWithType: FuncActOnDataReader.ActOnItemAsync(IDataReader)
  fullName: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnItemAsync(System.Data.IDataReader)
  type: Method
  source:
    path: Whipstaff.Runtime
    isExternal: true
  assemblies:
  - Whipstaff.Runtime
  namespace: Whipstaff.Runtime.JobSequencing
  syntax:
    content: protected override Task ActOnItemAsync(IDataReader item)
    parameters:
    - id: item
      type: System.Data.IDataReader
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function ActOnItemAsync(item As IDataReader) As Task
  overridden: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}.ActOnItemAsync(System.Data.IDataReader)
  overload: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnItemAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.OnNoItemsHandledAsync
  commentId: M:Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.OnNoItemsHandledAsync
  id: OnNoItemsHandledAsync
  parent: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader
  langs:
  - csharp
  - vb
  name: OnNoItemsHandledAsync()
  nameWithType: FuncActOnDataReader.OnNoItemsHandledAsync()
  fullName: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.OnNoItemsHandledAsync()
  type: Method
  source:
    path: Whipstaff.Runtime
    isExternal: true
  assemblies:
  - Whipstaff.Runtime
  namespace: Whipstaff.Runtime.JobSequencing
  syntax:
    content: protected override Task OnNoItemsHandledAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function OnNoItemsHandledAsync As Task
  overridden: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}.OnNoItemsHandledAsync
  overload: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.OnNoItemsHandledAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Whipstaff.Runtime.JobSequencing
  commentId: N:Whipstaff.Runtime.JobSequencing
  isExternal: true
  name: Whipstaff.Runtime.JobSequencing
  nameWithType: Whipstaff.Runtime.JobSequencing
  fullName: Whipstaff.Runtime.JobSequencing
- uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}
  commentId: T:Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}
  parent: Whipstaff.Runtime.JobSequencing
  definition: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2
  name: ActOnCollectionHelper<IDataReader, IDataReader>
  nameWithType: ActOnCollectionHelper<IDataReader, IDataReader>
  fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper<System.Data.IDataReader, System.Data.IDataReader>
  nameWithType.vb: ActOnCollectionHelper(Of IDataReader, IDataReader)
  fullName.vb: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper(Of System.Data.IDataReader, System.Data.IDataReader)
  name.vb: ActOnCollectionHelper(Of IDataReader, IDataReader)
  spec.csharp:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2
    name: ActOnCollectionHelper
    nameWithType: ActOnCollectionHelper
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2
    name: ActOnCollectionHelper
    nameWithType: ActOnCollectionHelper
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.Runtime.JobSequencing.ActOnDataReader
  commentId: T:Whipstaff.Runtime.JobSequencing.ActOnDataReader
  parent: Whipstaff.Runtime.JobSequencing
  isExternal: true
  name: ActOnDataReader
  nameWithType: ActOnDataReader
  fullName: Whipstaff.Runtime.JobSequencing.ActOnDataReader
- uid: Whipstaff.Runtime.JobSequencing.ActOnDataReader.ActOnCollectionAsync(System.Data.IDataReader)
  commentId: M:Whipstaff.Runtime.JobSequencing.ActOnDataReader.ActOnCollectionAsync(System.Data.IDataReader)
  parent: Whipstaff.Runtime.JobSequencing.ActOnDataReader
  isExternal: true
  name: ActOnCollectionAsync(IDataReader)
  nameWithType: ActOnDataReader.ActOnCollectionAsync(IDataReader)
  fullName: Whipstaff.Runtime.JobSequencing.ActOnDataReader.ActOnCollectionAsync(System.Data.IDataReader)
  spec.csharp:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnDataReader.ActOnCollectionAsync(System.Data.IDataReader)
    name: ActOnCollectionAsync
    nameWithType: ActOnDataReader.ActOnCollectionAsync
    fullName: Whipstaff.Runtime.JobSequencing.ActOnDataReader.ActOnCollectionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnDataReader.ActOnCollectionAsync(System.Data.IDataReader)
    name: ActOnCollectionAsync
    nameWithType: ActOnDataReader.ActOnCollectionAsync
    fullName: Whipstaff.Runtime.JobSequencing.ActOnDataReader.ActOnCollectionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}.ActOnCollectionAsync(System.Data.IDataReader)
  commentId: M:Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}.ActOnCollectionAsync(System.Data.IDataReader)
  parent: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}
  definition: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.ActOnCollectionAsync(`0)
  name: ActOnCollectionAsync(IDataReader)
  nameWithType: ActOnCollectionHelper<IDataReader, IDataReader>.ActOnCollectionAsync(IDataReader)
  fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper<System.Data.IDataReader, System.Data.IDataReader>.ActOnCollectionAsync(System.Data.IDataReader)
  nameWithType.vb: ActOnCollectionHelper(Of IDataReader, IDataReader).ActOnCollectionAsync(IDataReader)
  fullName.vb: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper(Of System.Data.IDataReader, System.Data.IDataReader).ActOnCollectionAsync(System.Data.IDataReader)
  spec.csharp:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.ActOnCollectionAsync(`0)
    name: ActOnCollectionAsync
    nameWithType: ActOnCollectionHelper<IDataReader, IDataReader>.ActOnCollectionAsync
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper<System.Data.IDataReader, System.Data.IDataReader>.ActOnCollectionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.ActOnCollectionAsync(`0)
    name: ActOnCollectionAsync
    nameWithType: ActOnCollectionHelper(Of IDataReader, IDataReader).ActOnCollectionAsync
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper(Of System.Data.IDataReader, System.Data.IDataReader).ActOnCollectionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}.ActOnItemAsync(System.Data.IDataReader)
  commentId: M:Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}.ActOnItemAsync(System.Data.IDataReader)
  parent: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}
  definition: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.ActOnItemAsync(`1)
  name: ActOnItemAsync(IDataReader)
  nameWithType: ActOnCollectionHelper<IDataReader, IDataReader>.ActOnItemAsync(IDataReader)
  fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper<System.Data.IDataReader, System.Data.IDataReader>.ActOnItemAsync(System.Data.IDataReader)
  nameWithType.vb: ActOnCollectionHelper(Of IDataReader, IDataReader).ActOnItemAsync(IDataReader)
  fullName.vb: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper(Of System.Data.IDataReader, System.Data.IDataReader).ActOnItemAsync(System.Data.IDataReader)
  spec.csharp:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.ActOnItemAsync(`1)
    name: ActOnItemAsync
    nameWithType: ActOnCollectionHelper<IDataReader, IDataReader>.ActOnItemAsync
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper<System.Data.IDataReader, System.Data.IDataReader>.ActOnItemAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.ActOnItemAsync(`1)
    name: ActOnItemAsync
    nameWithType: ActOnCollectionHelper(Of IDataReader, IDataReader).ActOnItemAsync
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper(Of System.Data.IDataReader, System.Data.IDataReader).ActOnItemAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}.OnNoItemsHandledAsync
  commentId: M:Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}.OnNoItemsHandledAsync
  parent: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper{System.Data.IDataReader,System.Data.IDataReader}
  definition: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.OnNoItemsHandledAsync
  name: OnNoItemsHandledAsync()
  nameWithType: ActOnCollectionHelper<IDataReader, IDataReader>.OnNoItemsHandledAsync()
  fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper<System.Data.IDataReader, System.Data.IDataReader>.OnNoItemsHandledAsync()
  nameWithType.vb: ActOnCollectionHelper(Of IDataReader, IDataReader).OnNoItemsHandledAsync()
  fullName.vb: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper(Of System.Data.IDataReader, System.Data.IDataReader).OnNoItemsHandledAsync()
  spec.csharp:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.OnNoItemsHandledAsync
    name: OnNoItemsHandledAsync
    nameWithType: ActOnCollectionHelper<IDataReader, IDataReader>.OnNoItemsHandledAsync
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper<System.Data.IDataReader, System.Data.IDataReader>.OnNoItemsHandledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.OnNoItemsHandledAsync
    name: OnNoItemsHandledAsync
    nameWithType: ActOnCollectionHelper(Of IDataReader, IDataReader).OnNoItemsHandledAsync
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper(Of System.Data.IDataReader, System.Data.IDataReader).OnNoItemsHandledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2
  commentId: T:Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2
  isExternal: true
  name: ActOnCollectionHelper<TCollection, TItem>
  nameWithType: ActOnCollectionHelper<TCollection, TItem>
  fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper<TCollection, TItem>
  nameWithType.vb: ActOnCollectionHelper(Of TCollection, TItem)
  fullName.vb: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper(Of TCollection, TItem)
  name.vb: ActOnCollectionHelper(Of TCollection, TItem)
  spec.csharp:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2
    name: ActOnCollectionHelper
    nameWithType: ActOnCollectionHelper
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2
    name: ActOnCollectionHelper
    nameWithType: ActOnCollectionHelper
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.ActOnCollectionAsync(`0)
  commentId: M:Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.ActOnCollectionAsync(`0)
  isExternal: true
  name: ActOnCollectionAsync(TCollection)
  nameWithType: ActOnCollectionHelper<TCollection, TItem>.ActOnCollectionAsync(TCollection)
  fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper<TCollection, TItem>.ActOnCollectionAsync(TCollection)
  nameWithType.vb: ActOnCollectionHelper(Of TCollection, TItem).ActOnCollectionAsync(TCollection)
  fullName.vb: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper(Of TCollection, TItem).ActOnCollectionAsync(TCollection)
  spec.csharp:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.ActOnCollectionAsync(`0)
    name: ActOnCollectionAsync
    nameWithType: ActOnCollectionHelper<TCollection, TItem>.ActOnCollectionAsync
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper<TCollection, TItem>.ActOnCollectionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.ActOnCollectionAsync(`0)
    name: ActOnCollectionAsync
    nameWithType: ActOnCollectionHelper(Of TCollection, TItem).ActOnCollectionAsync
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper(Of TCollection, TItem).ActOnCollectionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.ActOnItemAsync(`1)
  commentId: M:Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.ActOnItemAsync(`1)
  isExternal: true
  name: ActOnItemAsync(TItem)
  nameWithType: ActOnCollectionHelper<TCollection, TItem>.ActOnItemAsync(TItem)
  fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper<TCollection, TItem>.ActOnItemAsync(TItem)
  nameWithType.vb: ActOnCollectionHelper(Of TCollection, TItem).ActOnItemAsync(TItem)
  fullName.vb: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper(Of TCollection, TItem).ActOnItemAsync(TItem)
  spec.csharp:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.ActOnItemAsync(`1)
    name: ActOnItemAsync
    nameWithType: ActOnCollectionHelper<TCollection, TItem>.ActOnItemAsync
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper<TCollection, TItem>.ActOnItemAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.ActOnItemAsync(`1)
    name: ActOnItemAsync
    nameWithType: ActOnCollectionHelper(Of TCollection, TItem).ActOnItemAsync
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper(Of TCollection, TItem).ActOnItemAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.OnNoItemsHandledAsync
  commentId: M:Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.OnNoItemsHandledAsync
  isExternal: true
  name: OnNoItemsHandledAsync()
  nameWithType: ActOnCollectionHelper<TCollection, TItem>.OnNoItemsHandledAsync()
  fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper<TCollection, TItem>.OnNoItemsHandledAsync()
  nameWithType.vb: ActOnCollectionHelper(Of TCollection, TItem).OnNoItemsHandledAsync()
  fullName.vb: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper(Of TCollection, TItem).OnNoItemsHandledAsync()
  spec.csharp:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.OnNoItemsHandledAsync
    name: OnNoItemsHandledAsync
    nameWithType: ActOnCollectionHelper<TCollection, TItem>.OnNoItemsHandledAsync
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper<TCollection, TItem>.OnNoItemsHandledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper`2.OnNoItemsHandledAsync
    name: OnNoItemsHandledAsync
    nameWithType: ActOnCollectionHelper(Of TCollection, TItem).OnNoItemsHandledAsync
    fullName: Whipstaff.Runtime.JobSequencing.ActOnCollectionHelper(Of TCollection, TItem).OnNoItemsHandledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.#ctor*
  commentId: Overload:Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.#ctor
  isExternal: true
  name: FuncActOnDataReader
  nameWithType: FuncActOnDataReader.FuncActOnDataReader
  fullName: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.FuncActOnDataReader
- uid: System.Func{System.Data.IDataReader,System.Threading.Tasks.Task}
  commentId: '!:System.Func{System.Data.IDataReader,System.Threading.Tasks.Task}'
  definition: System.Func`2
  name: Func<IDataReader, Task>
  nameWithType: Func<IDataReader, Task>
  fullName: System.Func<System.Data.IDataReader, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of IDataReader, Task)
  fullName.vb: System.Func(Of System.Data.IDataReader, System.Threading.Tasks.Task)
  name.vb: Func(Of IDataReader, Task)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Threading.Tasks.Task}
  commentId: '!:System.Func{System.Threading.Tasks.Task}'
  definition: System.Func`1
  name: Func<Task>
  nameWithType: Func<Task>
  fullName: System.Func<System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of Task)
  fullName.vb: System.Func(Of System.Threading.Tasks.Task)
  name.vb: Func(Of Task)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: System.Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: System.Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  isExternal: true
  name: Func<>
  nameWithType: Func<>
  fullName: System.Func<>
  nameWithType.vb: Func(Of )
  fullName.vb: System.Func(Of )
  name.vb: Func(Of )
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnCollectionAsync*
  commentId: Overload:Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnCollectionAsync
  isExternal: true
  name: ActOnCollectionAsync
  nameWithType: FuncActOnDataReader.ActOnCollectionAsync
  fullName: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnCollectionAsync
- uid: System.Data.IDataReader
  isExternal: true
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnItemAsync*
  commentId: Overload:Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnItemAsync
  isExternal: true
  name: ActOnItemAsync
  nameWithType: FuncActOnDataReader.ActOnItemAsync
  fullName: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.ActOnItemAsync
- uid: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.OnNoItemsHandledAsync*
  commentId: Overload:Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.OnNoItemsHandledAsync
  isExternal: true
  name: OnNoItemsHandledAsync
  nameWithType: FuncActOnDataReader.OnNoItemsHandledAsync
  fullName: Whipstaff.Runtime.JobSequencing.FuncActOnDataReader.OnNoItemsHandledAsync
