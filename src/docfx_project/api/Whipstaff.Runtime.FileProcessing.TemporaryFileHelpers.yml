### YamlMime:ManagedReference
items:
- uid: Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers
  commentId: T:Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers
  id: TemporaryFileHelpers
  parent: Whipstaff.Runtime.FileProcessing
  children:
  - Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile(System.Byte[],System.String,System.Action{System.String},System.Boolean)
  - Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile``1(System.Byte[],System.String,System.Func{System.String,``0},System.Boolean)
  langs:
  - csharp
  - vb
  name: TemporaryFileHelpers
  nameWithType: TemporaryFileHelpers
  fullName: Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers
  type: Class
  source:
    path: Whipstaff.Runtime
    isExternal: true
  assemblies:
  - Whipstaff.Runtime
  namespace: Whipstaff.Runtime.FileProcessing
  summary: "\nHelpers for working with temporary files.\n"
  syntax:
    content: 'public static class TemporaryFileHelpers : Object'
    content.vb: >-
      Public Module TemporaryFileHelpers
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile(System.Byte[],System.String,System.Action{System.String},System.Boolean)
  commentId: M:Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile(System.Byte[],System.String,System.Action{System.String},System.Boolean)
  id: WithTempFile(System.Byte[],System.String,System.Action{System.String},System.Boolean)
  parent: Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers
  langs:
  - csharp
  - vb
  name: WithTempFile(Byte[], String, Action<String>, Boolean)
  nameWithType: TemporaryFileHelpers.WithTempFile(Byte[], String, Action<String>, Boolean)
  fullName: Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile(System.Byte[], System.String, System.Action<System.String>, System.Boolean)
  type: Method
  source:
    path: Whipstaff.Runtime
    isExternal: true
  assemblies:
  - Whipstaff.Runtime
  namespace: Whipstaff.Runtime.FileProcessing
  summary: "\nCarries out an action using a temporary file.\n"
  syntax:
    content: public static void WithTempFile(byte[] fileAsBytes, string fileExtension, Action<string> fileAction, bool skipDeleteException)
    parameters:
    - id: fileAsBytes
      type: System.Byte[]
      description: The file as a byte array.
    - id: fileExtension
      type: System.String
      description: The file extension.
    - id: fileAction
      type: System.Action{System.String}
      description: The action to carry out referencing the file.
    - id: skipDeleteException
      type: System.Boolean
      description: Whether to skip the exception from attempting to delete the temporary file.
    content.vb: Public Shared Sub WithTempFile(fileAsBytes As Byte(), fileExtension As String, fileAction As Action(Of String), skipDeleteException As Boolean)
  overload: Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile*
  nameWithType.vb: TemporaryFileHelpers.WithTempFile(Byte(), String, Action(Of String), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile(System.Byte(), System.String, System.Action(Of System.String), System.Boolean)
  name.vb: WithTempFile(Byte(), String, Action(Of String), Boolean)
- uid: Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile``1(System.Byte[],System.String,System.Func{System.String,``0},System.Boolean)
  commentId: M:Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile``1(System.Byte[],System.String,System.Func{System.String,``0},System.Boolean)
  id: WithTempFile``1(System.Byte[],System.String,System.Func{System.String,``0},System.Boolean)
  parent: Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers
  langs:
  - csharp
  - vb
  name: WithTempFile<TResult>(Byte[], String, Func<String, TResult>, Boolean)
  nameWithType: TemporaryFileHelpers.WithTempFile<TResult>(Byte[], String, Func<String, TResult>, Boolean)
  fullName: Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile<TResult>(System.Byte[], System.String, System.Func<System.String, TResult>, System.Boolean)
  type: Method
  source:
    path: Whipstaff.Runtime
    isExternal: true
  assemblies:
  - Whipstaff.Runtime
  namespace: Whipstaff.Runtime.FileProcessing
  summary: "\nCarries out an action using a temporary file.\n"
  syntax:
    content: public static TResult WithTempFile<TResult>(byte[] fileAsBytes, string fileExtension, Func<string, TResult> fileAction, bool skipDeleteException)
    parameters:
    - id: fileAsBytes
      type: System.Byte[]
      description: The file as a byte array.
    - id: fileExtension
      type: System.String
      description: The file extension.
    - id: fileAction
      type: System.Func{System.String,{TResult}}
      description: The action to carry out referencing the file.
    - id: skipDeleteException
      type: System.Boolean
      description: Whether to skip the exception from attempting to delete the temporary file.
    typeParameters:
    - id: TResult
      description: The type for the result of the action.
    return:
      type: '{TResult}'
      description: Result from the file action.
    content.vb: Public Shared Function WithTempFile(Of TResult)(fileAsBytes As Byte(), fileExtension As String, fileAction As Func(Of String, TResult), skipDeleteException As Boolean) As TResult
  overload: Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile*
  nameWithType.vb: TemporaryFileHelpers.WithTempFile(Of TResult)(Byte(), String, Func(Of String, TResult), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile(Of TResult)(System.Byte(), System.String, System.Func(Of System.String, TResult), System.Boolean)
  name.vb: WithTempFile(Of TResult)(Byte(), String, Func(Of String, TResult), Boolean)
references:
- uid: Whipstaff.Runtime.FileProcessing
  commentId: N:Whipstaff.Runtime.FileProcessing
  isExternal: true
  name: Whipstaff.Runtime.FileProcessing
  nameWithType: Whipstaff.Runtime.FileProcessing
  fullName: Whipstaff.Runtime.FileProcessing
- uid: Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile*
  commentId: Overload:Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile
  isExternal: true
  name: WithTempFile
  nameWithType: TemporaryFileHelpers.WithTempFile
  fullName: Whipstaff.Runtime.FileProcessing.TemporaryFileHelpers.WithTempFile
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Action{System.String}
  commentId: '!:System.Action{System.String}'
  definition: System.Action`1
  name: Action<String>
  nameWithType: Action<String>
  fullName: System.Action<System.String>
  nameWithType.vb: Action(Of String)
  fullName.vb: System.Action(Of System.String)
  name.vb: Action(Of String)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: System.Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: System.Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.String,{TResult}}
  commentId: '!:System.Func{System.String,``0}'
  definition: System.Func`2
  name: Func<String, TResult>
  nameWithType: Func<String, TResult>
  fullName: System.Func<System.String, TResult>
  nameWithType.vb: Func(Of String, TResult)
  fullName.vb: System.Func(Of System.String, TResult)
  name.vb: Func(Of String, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: System.Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: System.Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
