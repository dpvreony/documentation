### YamlMime:ManagedReference
items:
- uid: Whipstaff.Rx.ReadOnlyObservables.BehaviorSubjectExtensions
  commentId: T:Whipstaff.Rx.ReadOnlyObservables.BehaviorSubjectExtensions
  id: BehaviorSubjectExtensions
  parent: Whipstaff.Rx.ReadOnlyObservables
  children:
  - Whipstaff.Rx.ReadOnlyObservables.BehaviorSubjectExtensions.ToReadOnlyObservable``1(System.Reactive.Subjects.BehaviorSubject{``0})
  langs:
  - csharp
  - vb
  name: BehaviorSubjectExtensions
  nameWithType: BehaviorSubjectExtensions
  fullName: Whipstaff.Rx.ReadOnlyObservables.BehaviorSubjectExtensions
  type: Class
  source:
    path: Whipstaff.Rx
    isExternal: true
  assemblies:
  - Whipstaff.Rx
  namespace: Whipstaff.Rx.ReadOnlyObservables
  summary: "\nExtension Methods for <xref href=\"System.Reactive.Subjects.BehaviorSubject%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: 'public static class BehaviorSubjectExtensions : Object'
    content.vb: >-
      Public Module BehaviorSubjectExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Whipstaff.Rx.ReadOnlyObservables.BehaviorSubjectExtensions.ToReadOnlyObservable``1(System.Reactive.Subjects.BehaviorSubject{``0})
  commentId: M:Whipstaff.Rx.ReadOnlyObservables.BehaviorSubjectExtensions.ToReadOnlyObservable``1(System.Reactive.Subjects.BehaviorSubject{``0})
  id: ToReadOnlyObservable``1(System.Reactive.Subjects.BehaviorSubject{``0})
  isExtensionMethod: true
  parent: Whipstaff.Rx.ReadOnlyObservables.BehaviorSubjectExtensions
  langs:
  - csharp
  - vb
  name: ToReadOnlyObservable<T>(BehaviorSubject<T>)
  nameWithType: BehaviorSubjectExtensions.ToReadOnlyObservable<T>(BehaviorSubject<T>)
  fullName: Whipstaff.Rx.ReadOnlyObservables.BehaviorSubjectExtensions.ToReadOnlyObservable<T>(System.Reactive.Subjects.BehaviorSubject<T>)
  type: Method
  source:
    path: Whipstaff.Rx
    isExternal: true
  assemblies:
  - Whipstaff.Rx
  namespace: Whipstaff.Rx.ReadOnlyObservables
  summary: "\nWraps a Behaviour Subject as a Read Only observable.\n"
  syntax:
    content: public static IReadOnlyObservable<T> ToReadOnlyObservable<T>(this BehaviorSubject<T> behaviorSubject)
    parameters:
    - id: behaviorSubject
      type: System.Reactive.Subjects.BehaviorSubject{{T}}
      description: The behavior subject to wrap and observe.
    typeParameters:
    - id: T
      description: The type being exposed by the subject.
    return:
      type: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable{{T}}
      description: Readonly observable wrapper.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToReadOnlyObservable(Of T)(behaviorSubject As BehaviorSubject(Of T)) As IReadOnlyObservable(Of T)
  overload: Whipstaff.Rx.ReadOnlyObservables.BehaviorSubjectExtensions.ToReadOnlyObservable*
  nameWithType.vb: BehaviorSubjectExtensions.ToReadOnlyObservable(Of T)(BehaviorSubject(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Whipstaff.Rx.ReadOnlyObservables.BehaviorSubjectExtensions.ToReadOnlyObservable(Of T)(System.Reactive.Subjects.BehaviorSubject(Of T))
  name.vb: ToReadOnlyObservable(Of T)(BehaviorSubject(Of T))
references:
- uid: Whipstaff.Rx.ReadOnlyObservables
  commentId: N:Whipstaff.Rx.ReadOnlyObservables
  isExternal: true
  name: Whipstaff.Rx.ReadOnlyObservables
  nameWithType: Whipstaff.Rx.ReadOnlyObservables
  fullName: Whipstaff.Rx.ReadOnlyObservables
- uid: Whipstaff.Rx.ReadOnlyObservables.BehaviorSubjectExtensions.ToReadOnlyObservable*
  commentId: Overload:Whipstaff.Rx.ReadOnlyObservables.BehaviorSubjectExtensions.ToReadOnlyObservable
  isExternal: true
  name: ToReadOnlyObservable
  nameWithType: BehaviorSubjectExtensions.ToReadOnlyObservable
  fullName: Whipstaff.Rx.ReadOnlyObservables.BehaviorSubjectExtensions.ToReadOnlyObservable
- uid: System.Reactive.Subjects.BehaviorSubject{{T}}
  commentId: '!:System.Reactive.Subjects.BehaviorSubject{``0}'
  definition: System.Reactive.Subjects.BehaviorSubject`1
  name: BehaviorSubject<T>
  nameWithType: BehaviorSubject<T>
  fullName: System.Reactive.Subjects.BehaviorSubject<T>
  nameWithType.vb: BehaviorSubject(Of T)
  fullName.vb: System.Reactive.Subjects.BehaviorSubject(Of T)
  name.vb: BehaviorSubject(Of T)
  spec.csharp:
  - uid: System.Reactive.Subjects.BehaviorSubject`1
    name: BehaviorSubject
    nameWithType: BehaviorSubject
    fullName: System.Reactive.Subjects.BehaviorSubject
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Reactive.Subjects.BehaviorSubject`1
    name: BehaviorSubject
    nameWithType: BehaviorSubject
    fullName: System.Reactive.Subjects.BehaviorSubject
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable{{T}}
  commentId: T:Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable{``0}
  parent: Whipstaff.Rx.ReadOnlyObservables
  definition: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable`1
  name: IReadOnlyObservable<T>
  nameWithType: IReadOnlyObservable<T>
  fullName: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable<T>
  nameWithType.vb: IReadOnlyObservable(Of T)
  fullName.vb: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable(Of T)
  name.vb: IReadOnlyObservable(Of T)
  spec.csharp:
  - uid: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable`1
    name: IReadOnlyObservable
    nameWithType: IReadOnlyObservable
    fullName: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable`1
    name: IReadOnlyObservable
    nameWithType: IReadOnlyObservable
    fullName: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reactive.Subjects.BehaviorSubject`1
  isExternal: true
  name: BehaviorSubject<>
  nameWithType: BehaviorSubject<>
  fullName: System.Reactive.Subjects.BehaviorSubject<>
  nameWithType.vb: BehaviorSubject(Of )
  fullName.vb: System.Reactive.Subjects.BehaviorSubject(Of )
  name.vb: BehaviorSubject(Of )
  spec.csharp:
  - uid: System.Reactive.Subjects.BehaviorSubject`1
    name: BehaviorSubject
    nameWithType: BehaviorSubject
    fullName: System.Reactive.Subjects.BehaviorSubject
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Reactive.Subjects.BehaviorSubject`1
    name: BehaviorSubject
    nameWithType: BehaviorSubject
    fullName: System.Reactive.Subjects.BehaviorSubject
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable`1
  commentId: T:Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable`1
  isExternal: true
  name: IReadOnlyObservable<T>
  nameWithType: IReadOnlyObservable<T>
  fullName: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable<T>
  nameWithType.vb: IReadOnlyObservable(Of T)
  fullName.vb: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable(Of T)
  name.vb: IReadOnlyObservable(Of T)
  spec.csharp:
  - uid: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable`1
    name: IReadOnlyObservable
    nameWithType: IReadOnlyObservable
    fullName: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable`1
    name: IReadOnlyObservable
    nameWithType: IReadOnlyObservable
    fullName: Whipstaff.Rx.ReadOnlyObservables.IReadOnlyObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
