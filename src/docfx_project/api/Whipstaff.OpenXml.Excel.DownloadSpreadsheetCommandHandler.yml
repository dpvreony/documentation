### YamlMime:ManagedReference
items:
- uid: Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler
  commentId: T:Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler
  id: DownloadSpreadsheetCommandHandler
  parent: Whipstaff.OpenXml.Excel
  children:
  - Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.#ctor
  - Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.Handle(Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DownloadSpreadsheetCommandHandler
  nameWithType: DownloadSpreadsheetCommandHandler
  fullName: Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler
  type: Class
  source:
    path: Whipstaff.OpenXml
    isExternal: true
  assemblies:
  - Whipstaff.OpenXml
  namespace: Whipstaff.OpenXml.Excel
  summary: "\nSample handler for generating and\\or serving spreadsheets.\n"
  syntax:
    content: 'public sealed class DownloadSpreadsheetCommandHandler : Object, IRequestHandler<DownloadSpreadsheetRequestDto, FileNameAndStreamModel>'
    content.vb: >-
      Public NotInheritable Class DownloadSpreadsheetCommandHandler
          Inherits Object
          Implements IRequestHandler(Of DownloadSpreadsheetRequestDto, FileNameAndStreamModel)
  inheritance:
  - System.Object
  implements:
  - MediatR.IRequestHandler{Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto,Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.Handle(Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto,System.Threading.CancellationToken)
  commentId: M:Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.Handle(Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto,System.Threading.CancellationToken)
  id: Handle(Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto,System.Threading.CancellationToken)
  parent: Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler
  langs:
  - csharp
  - vb
  name: Handle(DownloadSpreadsheetRequestDto, CancellationToken)
  nameWithType: DownloadSpreadsheetCommandHandler.Handle(DownloadSpreadsheetRequestDto, CancellationToken)
  fullName: Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.Handle(Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto, System.Threading.CancellationToken)
  type: Method
  source:
    path: Whipstaff.OpenXml
    isExternal: true
  assemblies:
  - Whipstaff.OpenXml
  namespace: Whipstaff.OpenXml.Excel
  syntax:
    content: public Task<FileNameAndStreamModel> Handle(DownloadSpreadsheetRequestDto request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel}
    content.vb: Public Function Handle(request As DownloadSpreadsheetRequestDto, cancellationToken As CancellationToken) As Task(Of FileNameAndStreamModel)
  overload: Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.Handle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.#ctor
  commentId: M:Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.#ctor
  id: '#ctor'
  parent: Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler
  langs:
  - csharp
  - vb
  name: DownloadSpreadsheetCommandHandler()
  nameWithType: DownloadSpreadsheetCommandHandler.DownloadSpreadsheetCommandHandler()
  fullName: Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.DownloadSpreadsheetCommandHandler()
  type: Constructor
  source:
    path: Whipstaff.OpenXml
    isExternal: true
  assemblies:
  - Whipstaff.OpenXml
  namespace: Whipstaff.OpenXml.Excel
  syntax:
    content: public DownloadSpreadsheetCommandHandler()
    content.vb: Public Sub New
  overload: Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Whipstaff.OpenXml.Excel
  commentId: N:Whipstaff.OpenXml.Excel
  isExternal: true
  name: Whipstaff.OpenXml.Excel
  nameWithType: Whipstaff.OpenXml.Excel
  fullName: Whipstaff.OpenXml.Excel
- uid: MediatR.IRequestHandler{Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto,Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel}
  commentId: '!:MediatR.IRequestHandler{Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto,Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel}'
  definition: MediatR.IRequestHandler`2
  name: IRequestHandler<DownloadSpreadsheetRequestDto, FileNameAndStreamModel>
  nameWithType: IRequestHandler<DownloadSpreadsheetRequestDto, FileNameAndStreamModel>
  fullName: MediatR.IRequestHandler<Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto, Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel>
  nameWithType.vb: IRequestHandler(Of DownloadSpreadsheetRequestDto, FileNameAndStreamModel)
  fullName.vb: MediatR.IRequestHandler(Of Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto, Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel)
  name.vb: IRequestHandler(Of DownloadSpreadsheetRequestDto, FileNameAndStreamModel)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto
    name: DownloadSpreadsheetRequestDto
    nameWithType: DownloadSpreadsheetRequestDto
    fullName: Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel
    name: FileNameAndStreamModel
    nameWithType: FileNameAndStreamModel
    fullName: Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto
    name: DownloadSpreadsheetRequestDto
    nameWithType: DownloadSpreadsheetRequestDto
    fullName: Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel
    name: FileNameAndStreamModel
    nameWithType: FileNameAndStreamModel
    fullName: Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<, >
  nameWithType: IRequestHandler<, >
  fullName: MediatR.IRequestHandler<, >
  nameWithType.vb: IRequestHandler(Of , )
  fullName.vb: MediatR.IRequestHandler(Of , )
  name.vb: IRequestHandler(Of , )
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.Handle*
  commentId: Overload:Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.Handle
  isExternal: true
  name: Handle
  nameWithType: DownloadSpreadsheetCommandHandler.Handle
  fullName: Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.Handle
- uid: Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto
  commentId: T:Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto
  parent: Whipstaff.OpenXml.Excel
  isExternal: true
  name: DownloadSpreadsheetRequestDto
  nameWithType: DownloadSpreadsheetRequestDto
  fullName: Whipstaff.OpenXml.Excel.DownloadSpreadsheetRequestDto
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel}
  commentId: '!:System.Threading.Tasks.Task{Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel}'
  definition: System.Threading.Tasks.Task`1
  name: Task<FileNameAndStreamModel>
  nameWithType: Task<FileNameAndStreamModel>
  fullName: System.Threading.Tasks.Task<Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel>
  nameWithType.vb: Task(Of FileNameAndStreamModel)
  fullName.vb: System.Threading.Tasks.Task(Of Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel)
  name.vb: Task(Of FileNameAndStreamModel)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel
    name: FileNameAndStreamModel
    nameWithType: FileNameAndStreamModel
    fullName: Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel
    name: FileNameAndStreamModel
    nameWithType: FileNameAndStreamModel
    fullName: Whipstaff.AspNetCore.FileTransfer.FileNameAndStreamModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.#ctor*
  commentId: Overload:Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.#ctor
  isExternal: true
  name: DownloadSpreadsheetCommandHandler
  nameWithType: DownloadSpreadsheetCommandHandler.DownloadSpreadsheetCommandHandler
  fullName: Whipstaff.OpenXml.Excel.DownloadSpreadsheetCommandHandler.DownloadSpreadsheetCommandHandler
