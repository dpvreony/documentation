### YamlMime:ManagedReference
items:
- uid: Whipstaff.Runtime.Extensions.AssemblyExtensions
  commentId: T:Whipstaff.Runtime.Extensions.AssemblyExtensions
  id: AssemblyExtensions
  parent: Whipstaff.Runtime.Extensions
  children:
  - Whipstaff.Runtime.Extensions.AssemblyExtensions.GetClassesInNamespace(System.Reflection.Assembly,System.String)
  - Whipstaff.Runtime.Extensions.AssemblyExtensions.LoadStringFromResource(System.Reflection.Assembly,System.String,System.String)
  langs:
  - csharp
  - vb
  name: AssemblyExtensions
  nameWithType: AssemblyExtensions
  fullName: Whipstaff.Runtime.Extensions.AssemblyExtensions
  type: Class
  source:
    path: Whipstaff.Runtime
    isExternal: true
  assemblies:
  - Whipstaff.Runtime
  namespace: Whipstaff.Runtime.Extensions
  summary: "\nAssembly Extensions.\n"
  syntax:
    content: 'public static class AssemblyExtensions : Object'
    content.vb: >-
      Public Module AssemblyExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Whipstaff.Runtime.Extensions.AssemblyExtensions.GetClassesInNamespace(System.Reflection.Assembly,System.String)
  commentId: M:Whipstaff.Runtime.Extensions.AssemblyExtensions.GetClassesInNamespace(System.Reflection.Assembly,System.String)
  id: GetClassesInNamespace(System.Reflection.Assembly,System.String)
  isExtensionMethod: true
  parent: Whipstaff.Runtime.Extensions.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: GetClassesInNamespace(Assembly, String)
  nameWithType: AssemblyExtensions.GetClassesInNamespace(Assembly, String)
  fullName: Whipstaff.Runtime.Extensions.AssemblyExtensions.GetClassesInNamespace(System.Reflection.Assembly, System.String)
  type: Method
  source:
    path: Whipstaff.Runtime
    isExternal: true
  assemblies:
  - Whipstaff.Runtime
  namespace: Whipstaff.Runtime.Extensions
  summary: "\nThe get classes in namespace.\n"
  syntax:
    content: public static Type[] GetClassesInNamespace(this Assembly assembly, string fullyQualifiedNamespace)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "\nThe assembly to search.\n"
    - id: fullyQualifiedNamespace
      type: System.String
      description: "\nThe fully qualified namespace to look in.\n"
    return:
      type: System.Type[]
      description: "\nList of classes.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetClassesInNamespace(assembly As Assembly, fullyQualifiedNamespace As String) As Type()
  overload: Whipstaff.Runtime.Extensions.AssemblyExtensions.GetClassesInNamespace*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Whipstaff.Runtime.Extensions.AssemblyExtensions.LoadStringFromResource(System.Reflection.Assembly,System.String,System.String)
  commentId: M:Whipstaff.Runtime.Extensions.AssemblyExtensions.LoadStringFromResource(System.Reflection.Assembly,System.String,System.String)
  id: LoadStringFromResource(System.Reflection.Assembly,System.String,System.String)
  isExtensionMethod: true
  parent: Whipstaff.Runtime.Extensions.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: LoadStringFromResource(Assembly, String, String)
  nameWithType: AssemblyExtensions.LoadStringFromResource(Assembly, String, String)
  fullName: Whipstaff.Runtime.Extensions.AssemblyExtensions.LoadStringFromResource(System.Reflection.Assembly, System.String, System.String)
  type: Method
  source:
    path: Whipstaff.Runtime
    isExternal: true
  assemblies:
  - Whipstaff.Runtime
  namespace: Whipstaff.Runtime.Extensions
  summary: "\nLoads a string from an embedded resource file.\n"
  remarks: "\nThis code is based on an answer on stack overflow\nhttp://stackoverflow.com/questions/576571/where-do-you-put-sql-statements-in-your-c-sharp-projects\nanswer by: http://stackoverflow.com/users/13302/marc-s.\n"
  syntax:
    content: public static string LoadStringFromResource(this Assembly assembly, string resourceNamespace, string resourceFileName)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "\nThe assembly containing the resource.\n"
    - id: resourceNamespace
      type: System.String
      description: "\nNamespace where the resource file resides. Usually the application name.\n"
    - id: resourceFileName
      type: System.String
      description: "\nThe filename of the embedded resource.\n"
    return:
      type: System.String
      description: "\nstring from embedded resource file.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function LoadStringFromResource(assembly As Assembly, resourceNamespace As String, resourceFileName As String) As String
  overload: Whipstaff.Runtime.Extensions.AssemblyExtensions.LoadStringFromResource*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Whipstaff.Runtime.Extensions
  commentId: N:Whipstaff.Runtime.Extensions
  isExternal: true
  name: Whipstaff.Runtime.Extensions
  nameWithType: Whipstaff.Runtime.Extensions
  fullName: Whipstaff.Runtime.Extensions
- uid: Whipstaff.Runtime.Extensions.AssemblyExtensions.GetClassesInNamespace*
  commentId: Overload:Whipstaff.Runtime.Extensions.AssemblyExtensions.GetClassesInNamespace
  isExternal: true
  name: GetClassesInNamespace
  nameWithType: AssemblyExtensions.GetClassesInNamespace
  fullName: Whipstaff.Runtime.Extensions.AssemblyExtensions.GetClassesInNamespace
- uid: System.Reflection.Assembly
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Whipstaff.Runtime.Extensions.AssemblyExtensions.LoadStringFromResource*
  commentId: Overload:Whipstaff.Runtime.Extensions.AssemblyExtensions.LoadStringFromResource
  isExternal: true
  name: LoadStringFromResource
  nameWithType: AssemblyExtensions.LoadStringFromResource
  fullName: Whipstaff.Runtime.Extensions.AssemblyExtensions.LoadStringFromResource
