### YamlMime:ManagedReference
items:
- uid: Whipstaff.Core.IAuditableRequest`2
  commentId: T:Whipstaff.Core.IAuditableRequest`2
  id: IAuditableRequest`2
  parent: Whipstaff.Core
  children:
  - Whipstaff.Core.IAuditableRequest`2.ClaimsPrincipal
  - Whipstaff.Core.IAuditableRequest`2.RequestDto
  langs:
  - csharp
  - vb
  name: IAuditableRequest<TRequestDto, TResponse>
  nameWithType: IAuditableRequest<TRequestDto, TResponse>
  fullName: Whipstaff.Core.IAuditableRequest<TRequestDto, TResponse>
  type: Interface
  source:
    path: Whipstaff.Core
    isExternal: true
  assemblies:
  - Whipstaff.Core
  namespace: Whipstaff.Core
  summary: "\nRepresents a request that requires auditing.\n"
  syntax:
    content: 'public interface IAuditableRequest<out TRequestDto, out TResponse> : IRequest<TResponse>, IBaseRequest'
    typeParameters:
    - id: TRequestDto
      description: The type of the request object.
    - id: TResponse
      description: The type of the response object.
    content.vb: >-
      Public Interface IAuditableRequest(Of Out TRequestDto, Out TResponse)
          Inherits IRequest(Of TResponse), IBaseRequest
  nameWithType.vb: IAuditableRequest(Of TRequestDto, TResponse)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Whipstaff.Core.IAuditableRequest(Of TRequestDto, TResponse)
  name.vb: IAuditableRequest(Of TRequestDto, TResponse)
- uid: Whipstaff.Core.IAuditableRequest`2.RequestDto
  commentId: P:Whipstaff.Core.IAuditableRequest`2.RequestDto
  id: RequestDto
  parent: Whipstaff.Core.IAuditableRequest`2
  langs:
  - csharp
  - vb
  name: RequestDto
  nameWithType: IAuditableRequest<TRequestDto, TResponse>.RequestDto
  fullName: Whipstaff.Core.IAuditableRequest<TRequestDto, TResponse>.RequestDto
  type: Property
  source:
    path: Whipstaff.Core
    isExternal: true
  assemblies:
  - Whipstaff.Core
  namespace: Whipstaff.Core
  summary: "\nGets the request DTO for.\n"
  syntax:
    content: TRequestDto RequestDto { get; }
    parameters: []
    return:
      type: '{TRequestDto}'
    content.vb: ReadOnly Property RequestDto As TRequestDto
  overload: Whipstaff.Core.IAuditableRequest`2.RequestDto*
  nameWithType.vb: IAuditableRequest(Of TRequestDto, TResponse).RequestDto
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Whipstaff.Core.IAuditableRequest(Of TRequestDto, TResponse).RequestDto
- uid: Whipstaff.Core.IAuditableRequest`2.ClaimsPrincipal
  commentId: P:Whipstaff.Core.IAuditableRequest`2.ClaimsPrincipal
  id: ClaimsPrincipal
  parent: Whipstaff.Core.IAuditableRequest`2
  langs:
  - csharp
  - vb
  name: ClaimsPrincipal
  nameWithType: IAuditableRequest<TRequestDto, TResponse>.ClaimsPrincipal
  fullName: Whipstaff.Core.IAuditableRequest<TRequestDto, TResponse>.ClaimsPrincipal
  type: Property
  source:
    path: Whipstaff.Core
    isExternal: true
  assemblies:
  - Whipstaff.Core
  namespace: Whipstaff.Core
  summary: "\nGets the claims principal attached to the request.\n"
  syntax:
    content: ClaimsPrincipal ClaimsPrincipal { get; }
    parameters: []
    return:
      type: System.Security.Claims.ClaimsPrincipal
    content.vb: ReadOnly Property ClaimsPrincipal As ClaimsPrincipal
  overload: Whipstaff.Core.IAuditableRequest`2.ClaimsPrincipal*
  nameWithType.vb: IAuditableRequest(Of TRequestDto, TResponse).ClaimsPrincipal
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Whipstaff.Core.IAuditableRequest(Of TRequestDto, TResponse).ClaimsPrincipal
references:
- uid: Whipstaff.Core
  commentId: N:Whipstaff.Core
  isExternal: true
  name: Whipstaff.Core
  nameWithType: Whipstaff.Core
  fullName: Whipstaff.Core
- uid: Whipstaff.Core.IAuditableRequest`2.RequestDto*
  commentId: Overload:Whipstaff.Core.IAuditableRequest`2.RequestDto
  isExternal: true
  name: RequestDto
  nameWithType: IAuditableRequest<TRequestDto, TResponse>.RequestDto
  fullName: Whipstaff.Core.IAuditableRequest<TRequestDto, TResponse>.RequestDto
  nameWithType.vb: IAuditableRequest(Of TRequestDto, TResponse).RequestDto
  fullName.vb: Whipstaff.Core.IAuditableRequest(Of TRequestDto, TResponse).RequestDto
- uid: '{TRequestDto}'
  commentId: '!:TRequestDto'
  definition: TRequestDto
  name: TRequestDto
  nameWithType: TRequestDto
  fullName: TRequestDto
- uid: TRequestDto
  commentId: '!:TRequestDto'
  name: TRequestDto
  nameWithType: TRequestDto
  fullName: TRequestDto
- uid: Whipstaff.Core.IAuditableRequest`2.ClaimsPrincipal*
  commentId: Overload:Whipstaff.Core.IAuditableRequest`2.ClaimsPrincipal
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: IAuditableRequest<TRequestDto, TResponse>.ClaimsPrincipal
  fullName: Whipstaff.Core.IAuditableRequest<TRequestDto, TResponse>.ClaimsPrincipal
  nameWithType.vb: IAuditableRequest(Of TRequestDto, TResponse).ClaimsPrincipal
  fullName.vb: Whipstaff.Core.IAuditableRequest(Of TRequestDto, TResponse).ClaimsPrincipal
- uid: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
