name: .NET Core

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main ]

jobs:
  build:
    runs-on: windows-2022
    outputs:
      nbgv: ${{ steps.nbgv.outputs.SemVer2 }}
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      solutionpath: src\\DPVreony.documentation.sln
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Verify the ref context
      run: echo 'Ref Context is ${{ github.ref }}'

    - name: Verify the head ref context
      run: echo 'Head Ref Context is ${{ github.head_ref }}'

# don't move beyond 6.0.100 until https://github.com/dotnet/sdk/issues/23972 is resolved
    - name: Install .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.3.1

    # This mitigates an issue with websdk projects loading analyzers from old packages.
    - name: Cleanup nuget local storage
      run: dotnet nuget locals all --clear

    - name: Install dotnet tools
      run: dotnet tool restore

    - name: Restore Packages
      run: |
        dotnet restore ${{ env.solutionpath }} /bl:artifacts\\binlog\\restore.binlog

    - name: Run Build
      run: |
        msbuild /t:build /p:Configuration=Release /maxcpucount /bl:artifacts\\binlog\\build.binlog /p:ContinuousIntegrationBuild=true
      working-directory: src

    - name: Check document links
      run: |
        dotnet doclinkchecker -- -d docfx_project -f docfx_project\docfx-companion-tools.json -v
      working-directory: src

    # only store binlog on failure      
    - name: store binlogs
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: binlogs
        path: artifacts/binlog
        
    - name: store docfx
      uses: actions/upload-pages-artifact@v3
      with:
        path: src/docfx_project/_site
        
    - name: store outdated
      uses: actions/upload-artifact@v4
      with:
        name: outdated
        path: artifacts/outdated

  # Deployment job
  deploy:
    if: ${{ always() && format('refs/heads/{0}', github.event.repository.default_branch) == github.ref && github.head_ref == '' }}
    permissions:
      contents: read
      pages: write
      id-token: write
      actions: read
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    concurrency:
      group: pages
      cancel-in-progress: false
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4        
        
